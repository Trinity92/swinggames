/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris.gui;

//import java.awt.Event;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
//import javax.swing.InputMap;
//import javax.swing.KeyStroke;
//import javax.swing.text.DefaultEditorKit;
import tetris.tetriminos.Tetrimino;
import tetris.utils.TetrisGameState;

/**
 *
 * @author leandrogil
 */
public class NextTetriminoPanel extends javax.swing.JPanel {
    /**
     * Creates new form TetrisPanel
     */
    public NextTetriminoPanel() {
        initComponents();
        //getGraphics().translate(getHeight(), getWidth());
        
        
        // TODO: implement arrow key solution with Key Bindings instead of key events
        //InputMap inputMap = getInputMap();

        //KeyStroke key = KeyStroke.getKeyStroke(KeyEvent.VK_UP,Event.CTRL_MASK);
        //inputMap.put(key, DefaultEditorKit.backwardAction);
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Tetrimino t = TetrisGameState.getInstance().getTetriminoBag().get(0);
        // TODO
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tetrisPanelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tetrisPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tetrisPanelKeyPressed
        // REMINDER: arrow keys do not trigger keyTyped event !!! (use keyPressed/keyReleased or Key Bindings)
        if(TetrisGameState.getInstance().getFallingTetrimino() != null) {
            switch(evt.getKeyCode()) {
                case KeyEvent.VK_UP:
                    // turn current shape to the left
                    synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                        TetrisGameState.getInstance().getFallingTetrimino().rotateLeft();
                    }
                    revalidate();
                    repaint();
                    break;
                case KeyEvent.VK_LEFT:
                    // move current shape to the left
                    synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                        TetrisGameState.getInstance().getFallingTetrimino().moveToLeft();
                    }
                    revalidate();
                    repaint();
                    break;
                case KeyEvent.VK_RIGHT:
                    // turn current shape to the right
                    synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                        TetrisGameState.getInstance().getFallingTetrimino().moveToRight();
                    }
                    revalidate();
                    repaint();
                    break;
                case KeyEvent.VK_DOWN:
                    // accelerate shape downward
                    synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                        TetrisGameState.getInstance().getFallingTetrimino().moveShapeDown();
                    }
                    revalidate();
                    repaint();
                    break;
            }
        }
    }//GEN-LAST:event_tetrisPanelKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
