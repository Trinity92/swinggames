/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris.gui;

import java.awt.Dimension;
import tetris.utils.TetrisGameState;

/**
 *
 * @author leandrogil
 */
public class TetrisMainFrame extends javax.swing.JFrame {

    private GameLoopWorker gameLoopWorker;                    // reference to game loop thread
            
    public TetrisMainFrame() {
        initComponents();
        tetrisPanel.requestFocus();
        // set preferred size
        //setPreferredSize(new Dimension(SINGLE_BLOCK_RADIUS*2*MAX_GRID_WIDTH, SINGLE_BLOCK_RADIUS*2*MAX_GRID_HEIGHT));
        //setMinimumSize(getPreferredSize());
        //setMaximumSize(getPreferredSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEndGame = new javax.swing.JButton();
        btnStartGame = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        tetrisPanel = new tetris.gui.TetrisPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tetris");
        setMinimumSize(new java.awt.Dimension(277, 506));
        setName("mainFrame"); // NOI18N

        btnEndGame.setText("End game");
        btnEndGame.setEnabled(false);
        btnEndGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndGameActionPerformed(evt);
            }
        });

        btnStartGame.setText("Start game");
        btnStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartGameActionPerformed(evt);
            }
        });

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("<html>Click on the \"Start game\" button<br />to begin a new Tetris game.</html>");

        tetrisPanel.setBackground(new java.awt.Color(255, 255, 255));
        tetrisPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        tetrisPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tetrisPanelKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tetrisPanelLayout = new javax.swing.GroupLayout(tetrisPanel);
        tetrisPanel.setLayout(tetrisPanelLayout);
        tetrisPanelLayout.setHorizontalGroup(
            tetrisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        tetrisPanelLayout.setVerticalGroup(
            tetrisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tetrisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStatus)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStartGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(btnEndGame)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(tetrisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartGame)
                    .addComponent(btnEndGame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEndGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndGameActionPerformed
        // set loop flag in game loop worker instance to false
        gameLoopWorker.setGameIsRunningFlag();
        btnStartGame.setEnabled(true);
        btnEndGame.setEnabled(false);
    }//GEN-LAST:event_btnEndGameActionPerformed

    private void btnStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartGameActionPerformed
        // instantiate game loop thread to start the game
        gameLoopWorker = new GameLoopWorker(this);
        gameLoopWorker.execute();
        btnStartGame.setEnabled(false);
        btnEndGame.setEnabled(true);
    }//GEN-LAST:event_btnStartGameActionPerformed

    private void tetrisPanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tetrisPanelKeyTyped
        System.out.println("tetrisPanelKeyTyped triggered");
        switch(evt.getKeyCode()) {
            //case java.awt.event.KeyEvent.VK_UP:
                // TODO: turn current shape to the left
                //break;
            case java.awt.event.KeyEvent.VK_LEFT:
                // move current shape to the left
                System.out.println("triggered VK_LEFT");
                synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                    TetrisGameState.getInstance().getFallingTetrimino().moveToLeft();
                }
                revalidate();
                repaint();
                break;
            case java.awt.event.KeyEvent.VK_RIGHT:
                // turn current shape to the right
                System.out.println("triggered VK_RIGHT");
                synchronized(TetrisGameState.getInstance().getFallingTetrimino()) {
                    TetrisGameState.getInstance().getFallingTetrimino().moveToRight();
                }
                revalidate();
                repaint();
            break;
            //case java.awt.event.KeyEvent.VK_DOWN:
                // TODO: accelerate shape downward
            //break;
        }
    }//GEN-LAST:event_tetrisPanelKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TetrisMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TetrisMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TetrisMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TetrisMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TetrisMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEndGame;
    private javax.swing.JButton btnStartGame;
    private javax.swing.JLabel lblStatus;
    private tetris.gui.TetrisPanel tetrisPanel;
    // End of variables declaration//GEN-END:variables
        
}
